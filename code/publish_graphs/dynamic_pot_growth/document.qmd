---
title: "Dynamic Potential for Growth"
author: "Hubert Cadieux"
format: html
editor: visual
---

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: setting

# Packages ----------------------------------------------------------------
library(dplyr)
library(ggplot2)
library(plotly)

# Data --------------------------------------------------------------------
survey_data <- readRDS("../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/survey_data.rds")

# Party positions ---------------------------------------------------------
party_positions <- readRDS("../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/party_positions.rds") %>% 
  mutate(party_position = ifelse(party_position == 0.25 & issue == "iss_nationalisme_souv", 0.33, party_position),
         party_position = ifelse(party_position == 0.75 & issue == "iss_nationalisme_souv", 0.67, party_position))

# Function -------------------------------------------------------------------

get_graph <- function(issue_slug, choices, xlabel){
  if (issue_slug == "iss_nationalisme_souv") {
    distribution <- survey_data %>%
      filter(issue == issue_slug) %>%
      mutate(position = ifelse(position == 0.25, 0.33, position),
             position = ifelse(position == 0.75, 0.67, position)) %>% 
      group_by(position) %>%
      summarise(n = n()) %>% 
      mutate(prop = n / sum(n),
             estimate_irc = (-1 + prop))
  } else {
    distribution <- survey_data %>%
      filter(issue == issue_slug) %>%
      group_by(position) %>%
      summarise(n = n()) %>% 
      mutate(prop = n / sum(n),
             estimate_irc = (-1 + prop))
  }
  graph_data <- potgrowth::dynamic_potgrowth_data(
    data = survey_data,
    parties = potgrowth::qc_parties,
    issues = issue_slug,
  ) %>%
    mutate(
      estimate_irc = ifelse(estimate_irc > 0, 0, estimate_irc),
      estimate_irc = ifelse(estimate_irc < -1, -1, estimate_irc),
      conf_low_irc = ifelse(conf_low_irc > 0, 0, conf_low_irc),
      conf_low_irc = ifelse(conf_low_irc < -1, -1, conf_low_irc))
  if (issue_slug == "iss_nationalisme_souv") {
    graph_data <- graph_data %>%
      mutate(
        position = ifelse(position == 0.25, 0.33, position),
        position = ifelse(position == 0.75, 0.67, position)
      ) %>%
      filter(position != "0.5") %>%
      left_join(party_positions, by = c("party", "issue")) %>%
      mutate(is_party_position = ifelse(position == party_position, 1, 0))
  } else {
    graph_data <- graph_data %>%
      left_join(party_positions, by = c("party", "issue")) %>%
      mutate(is_party_position = ifelse(position == party_position, 1, 0))
  }
  graph_data2 <- as.data.frame(graph_data) %>%
    mutate(sd = (conf_high_irc - conf_low_irc) / 2,
           progress_bar = sapply(estimate_vote, potgrowth::generate_progress_bar),
           line_opacity = ifelse(is_party_position == 1, 0.3, 0),
           xticklabel = choices[position])
  party_positions <- graph_data2 %>% 
    filter(is_party_position == 1)
  # Créer le graphique Plotly avec des barres en arrière-plan et un axe y secondaire
  p <- plot_ly(
          colors = potgrowth::qc_party_colors,
          width = 850, height = 550) %>% 
  add_markers(data = party_positions,
              text = ~paste0(party, "'s position:\n", xticklabel),
              hoverinfo = "text",
              x = ~position,
              y = ~estimate_irc,
              split = ~party,
              color = ~party,
              legendgroup = ~party,
              colors = potgrowth::qc_party_colors,
              marker = list(size = 40,
                            symbol = "diamond",
                            opacity = ~line_opacity),
              showlegend = FALSE) %>%
  add_lines(data = graph_data2,
            line = list(width = 1),
            showlegend = FALSE,
            x = ~position,
            y = ~estimate_irc,
            split = ~party,
            color = ~party,
            legendgroup = ~party,
            colors = potgrowth::qc_party_colors,
            hoverinfo = "none") %>% 
  add_markers(x = ~position,
              y = ~estimate_irc,
              split = ~party,
              color = ~party,
              legendgroup = ~party,
              marker = list(size = 11),
              error_y = list(array = ~ sd),
              text = ~paste0("Acquired votes in segment<br>", progress_bar),
              hoverinfo = 'text') %>% 
  layout(
    yaxis = list(range = c(-1, 0),
                 title = list(text = "Potential for Growth\n(predicted RCI of non-voters)",
                              standoff = 30),
                 tickvals = seq(from = -1, to = 0, by = 0.1),
                 ticktext = paste0(seq(from = -10, to = 0, by = 1), "   "),
                 zeroline = FALSE),
    xaxis = list(title = paste0("\n", xlabel, "\n"),
                 tickvals = names(choices),
                 ticktext = choices,
                 tickfont = list(size = 9.5),
                 ticklabelposition = "outside",
                 zeroline = FALSE),
    margin = list(l = 50, r = 50, t = 60, b = 130),
    annotations = list(text = "Diamonds indicate the parties' positions on the issue.<br>Data from 2022.",
                              font = list(size = 12),
                              showarrow = FALSE,
                              xref = 'paper', x = 0,
                              yref = 'paper', y = -0.35)
  )
  return(p)
}
```


```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: iss_souv
#| out-width: "100%"
#| out-height: "100%"
#| fig-format: svg

# Souverainete -------------------------------------------------------------------

issue_slug <- "iss_nationalisme_souv"
choices <- c(
  "0" = "Strongly in favor\nof Quebec remaining\nin Canada",
  "0.33" = "Moderately in favor\nof Quebec remaining\nin Canada",
  "0.67" = "Moderately in favor\nof Quebec becoming\na sovereign country",
  "1" = "Strongly in favor\nof Quebec becoming\na sovereign country"
)
xlabel <- "Position on Quebec independence"
get_graph(issue_slug, choices, xlabel)
```