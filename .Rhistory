df_pg <- df %>%
filter(model == "potgrowth", riding_id != "938") %>%
mutate(weighted_mean_estimate == ifelse(weighted_mean_estimate > 0, 0, weighted_mean_estimate))
df_pg$party <- factor(df_pg$party, levels = c("PCQ", "PQ", "QS", "PLQ", "CAQ"))
df_vs <- df %>%
filter(model == "vote_solidity", riding_id != "938")
df_vs$party <- factor(df_vs$party, levels = c("PCQ", "PQ", "QS", "PLQ", "CAQ"))
# graphs ------------------------------------------------------------------
colors <- c("CAQ" = "#00cccc", "PLQ" = "#ED1A2D", "PQ" = "#004C9D", "QS" = "#FF5605", "PCQ" = "purple")
ggplot(df_pg, aes(x = weighted_mean_estimate, y = party, fill = party, color = party)) +
ggridges::geom_density_ridges(alpha = 0.4, color = "white", quantile_lines = TRUE) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
labs(title = "", x = "\nPotentiel de croissance estimé avec l'IRC\n", y = "",
caption = "Distribution par circonscription\nLes lignes de quantile représentent les 25e, 50e et 75e centiles de la distribution.") +
clessnize::theme_clean_light() +
theme(legend.position = "none",
axis.title.x = element_text(hjust = 0.5, size = 20),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
plot.caption = element_text(size = 12))
library(dplyr)
library(ggplot2)
# data loading ------------------------------------------------------------
df <- readRDS("~/Dropbox/CLESSN/article_pot-growth/_SharedFolder_article_pot-growth/data/marts/rci_by_riding/provqc2022/aggregated/potgrowth_votesolidity.rds")
# data wrangling ----------------------------------------------------------
df_pg <- df %>%
filter(model == "potgrowth", riding_id != "938") %>%
mutate(weighted_mean_estimate == ifelse(weighted_mean_estimate > 0, 0, weighted_mean_estimate))
df_pg$party <- factor(df_pg$party, levels = c("PCQ", "PQ", "QS", "PLQ", "CAQ"))
df_vs <- df %>%
filter(model == "vote_solidity", riding_id != "938")
df_vs$party <- factor(df_vs$party, levels = c("PCQ", "PQ", "QS", "PLQ", "CAQ"))
# graphs ------------------------------------------------------------------
colors <- c("CAQ" = "#00cccc", "PLQ" = "#ED1A2D", "PQ" = "#004C9D", "QS" = "#FF5605", "PCQ" = "purple")
ggplot(df_pg, aes(x = weighted_mean_estimate, y = party, fill = party, color = party)) +
ggridges::geom_density_ridges(alpha = 0.4, color = "white", quantile_lines = TRUE) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
labs(title = "", x = "\nEstimated Potential for Growth with the RCI\n", y = "",
caption = "Distribution by constituency\nThe quantile lines represent the 25th, 50th, and 75th percentiles of the distribution.") +
clessnize::theme_clean_light() +
theme(legend.position = "none",
axis.title.x = element_text(hjust = 0.5, size = 20),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
plot.caption = element_text(size = 12))
#| label: setting
# Packages ----------------------------------------------------------------
library(dplyr)
library(ggplot2)
library(plotly)
# Data --------------------------------------------------------------------
survey_data <- readRDS("../../../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/survey_data.rds")
# Data --------------------------------------------------------------------
survey_data <- readRDS("../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/survey_data.rds")
# Party positions ---------------------------------------------------------
party_positions <- readRDS("../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/party_positions.rds") %>%
mutate(party_position = ifelse(party_position == 0.25 & issue == "iss_nationalisme_souv", 0.33, party_position),
party_position = ifelse(party_position == 0.75 & issue == "iss_nationalisme_souv", 0.67, party_position))
get_graph <- function(issue_slug, choices, xlabel){
if (issue_slug == "iss_nationalisme_souv") {
distribution <- survey_data %>%
filter(issue == issue_slug) %>%
mutate(position = ifelse(position == 0.25, 0.33, position),
position = ifelse(position == 0.75, 0.67, position)) %>%
group_by(position) %>%
summarise(n = n()) %>%
mutate(prop = n / sum(n),
estimate_irc = (-1 + prop))
} else {
distribution <- survey_data %>%
filter(issue == issue_slug) %>%
group_by(position) %>%
summarise(n = n()) %>%
mutate(prop = n / sum(n),
estimate_irc = (-1 + prop))
}
graph_data <- potgrowth::dynamic_potgrowth_data(
data = survey_data,
parties = potgrowth::qc_parties,
issues = issue_slug,
) %>%
mutate(
estimate_irc = ifelse(estimate_irc > 0, 0, estimate_irc),
estimate_irc = ifelse(estimate_irc < -1, -1, estimate_irc),
conf_low_irc = ifelse(conf_low_irc > 0, 0, conf_low_irc),
conf_low_irc = ifelse(conf_low_irc < -1, -1, conf_low_irc))
if (issue_slug == "iss_nationalisme_souv") {
graph_data <- graph_data %>%
mutate(
position = ifelse(position == 0.25, 0.33, position),
position = ifelse(position == 0.75, 0.67, position)
) %>%
filter(position != "0.5") %>%
left_join(party_positions, by = c("party", "issue")) %>%
mutate(is_party_position = ifelse(position == party_position, 1, 0))
} else {
graph_data <- graph_data %>%
left_join(party_positions, by = c("party", "issue")) %>%
mutate(is_party_position = ifelse(position == party_position, 1, 0))
}
graph_data2 <- as.data.frame(graph_data) %>%
mutate(sd = (conf_high_irc - conf_low_irc) / 2,
progress_bar = sapply(estimate_vote, potgrowth::generate_progress_bar),
line_opacity = ifelse(is_party_position == 1, 0.3, 0),
xticklabel = choices[position])
party_positions <- graph_data2 %>%
filter(is_party_position == 1)
# Créer le graphique Plotly avec des barres en arrière-plan et un axe y secondaire
p <- plot_ly(
colors = potgrowth::qc_party_colors,
width = 650, height = 550) %>%
add_markers(data = party_positions,
text = ~paste0(party, "'s position:\n", xticklabel),
hoverinfo = "text",
x = ~position,
y = ~estimate_irc,
split = ~party,
color = ~party,
legendgroup = ~party,
colors = potgrowth::qc_party_colors,
marker = list(size = 40,
symbol = "diamond",
opacity = ~line_opacity),
showlegend = FALSE) %>%
add_lines(data = graph_data2,
line = list(width = 1),
showlegend = FALSE,
x = ~position,
y = ~estimate_irc,
split = ~party,
color = ~party,
legendgroup = ~party,
colors = potgrowth::qc_party_colors,
hoverinfo = "none") %>%
add_markers(x = ~position,
y = ~estimate_irc,
split = ~party,
color = ~party,
legendgroup = ~party,
marker = list(size = 11),
error_y = list(array = ~ sd),
text = ~paste0("Acquired votes in segment<br>", progress_bar),
hoverinfo = 'text') %>%
layout(
yaxis = list(range = c(-1, 0),
title = list(text = "Potential for Growth\n(predicted RCI of non-voters)",
standoff = 30),
tickvals = seq(from = -1, to = 0, by = 0.1),
ticktext = paste0(seq(from = -10, to = 0, by = 1), "   "),
zeroline = FALSE),
xaxis = list(title = paste0("\n", xlabel, "\n"),
tickvals = names(choices),
ticktext = choices,
tickfont = list(size = 9.5),
ticklabelposition = "outside",
zeroline = FALSE),
margin = list(l = 50, r = 50, t = 60, b = 130),
annotations = list(text = "Diamonds indicate the parties' positions on the issue.<br>Data from 2022.",
font = list(size = 12),
showarrow = FALSE,
xref = 'paper', x = 0,
yref = 'paper', y = -0.35)
)
return(p)
}
#| label: iss_souv
#| out-width: "100%"
#| out-height: "100%"
#| fig-format: svg
# Souverainete -------------------------------------------------------------------
issue_slug <- "iss_nationalisme_souv"
choices <- c(
"0" = "Strongly in favor\nof Quebec remaining\nin Canada",
"0.33" = "Moderately in favor\nof Quebec remaining\nin Canada",
"0.67" = "Moderately in favor\nof Quebec becoming\na sovereign country",
"1" = "Strongly in favor\nof Quebec becoming\na sovereign country"
)
xlabel <- "Position on Quebec independence"
get_graph(issue_slug, choices, xlabel)
# Data --------------------------------------------------------------------
survey_data <- readRDS("../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/survey_data.rds")
# Data --------------------------------------------------------------------
survey_data <- readRDS("/../../../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/survey_data.rds")
# Data --------------------------------------------------------------------
survey_data <- readRDS("../../../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/survey_data.rds")
# Party positions ---------------------------------------------------------
party_positions <- readRDS("../../../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/party_positions.rds") %>%
mutate(party_position = ifelse(party_position == 0.25 & issue == "iss_nationalisme_souv", 0.33, party_position),
party_position = ifelse(party_position == 0.75 & issue == "iss_nationalisme_souv", 0.67, party_position))
#| label: setting
# Packages ----------------------------------------------------------------
library(dplyr)
library(ggplot2)
library(plotly)
# Party positions ---------------------------------------------------------
party_positions <- readRDS("../../../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/party_positions.rds") %>%
mutate(party_position = ifelse(party_position == 0.25 & issue == "iss_nationalisme_souv", 0.33, party_position),
party_position = ifelse(party_position == 0.75 & issue == "iss_nationalisme_souv", 0.67, party_position))
devtools::install_github("hubcad25/potgrowth")
devtools::install_github("hubcad25/potgrowth")
devtools::install_github("hubcad25/potgrowth")
devtools::install_github("hubcad25/potgrowth")
devtools::install_github("hubcad25/potgrowth")
devtools::install_github("hubcad25/potgrowth")
devtools::install_github("hubcad25/potgrowth")
#| label: all
#| fig-format: svg
print(potgrowth::get_quarto_party_dashboard)
potgrowth::get_quarto_party_dashboard(party = "CAQ",
survey_data = survey_data,
issues_df = issues_df,
party_positions,
remove_variables_from_models = NULL)
devtools::install_github("hubcad25/potgrowth")
#| label: all
#| fig-format: svg
print(potgrowth::get_quarto_party_dashboard)
library(potgrowth)
print(get_quarto_party_dashboard)
devtools::install_github("hubcad25/potgrowth")
#| label: all
#| fig-format: svg
print(potgrowth::get_quarto_party_dashboard)
issues_df <- readODS::read_ods("../../../../_SharedFolder_memoire-pot-growth/data/marts/issue_labels.ods")
View(issues_df)
issues_df <- readODS::read_ods("../../../../_SharedFolder_memoire-pot-growth/data/marts/issue_labels.ods")
# Party positions ---------------------------------------------------------
party_positions <- readRDS("../../../../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/party_positions.rds") %>%
mutate(party_position = ifelse(party_position == 0.25, 0.33, party_position),
party_position = ifelse(party_position == 0.75, 0.67, party_position))
# Packages ----------------------------------------------------------------
library(dplyr)
library(ggplot2)
library(plotly)
# Data --------------------------------------------------------------------
survey_data <- readRDS("../../../../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/survey_data.rds")
# Party positions ---------------------------------------------------------
party_positions <- readRDS("../../../../_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/party_positions.rds") %>%
mutate(party_position = ifelse(party_position == 0.25, 0.33, party_position),
party_position = ifelse(party_position == 0.75, 0.67, party_position))
issues_df <- readODS::read_ods("../../../../_SharedFolder_memoire-pot-growth/data/marts/issue_labels.ods")
View(issues_df)
#| label: setting
# Packages ----------------------------------------------------------------
library(dplyr)
library(ggplot2)
library(plotly)
survey_data <- readRDS("_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/survey_data.rds")
party_positions <- readRDS("_SharedFolder_memoire-pot-growth/data/marts/cpsa2024/party_positions.rds") %>%
mutate(party_position = ifelse(party_position == 0.25 & issue == "iss_nationalisme_souv", 0.33, party_position),
party_position = ifelse(party_position == 0.75 & issue == "iss_nationalisme_souv", 0.67, party_position))
get_graph <- function(issue_slug, choices, xlabel){
if (issue_slug == "iss_nationalisme_souv") {
distribution <- survey_data %>%
filter(issue == issue_slug) %>%
mutate(position = ifelse(position == 0.25, 0.33, position),
position = ifelse(position == 0.75, 0.67, position)) %>%
group_by(position) %>%
summarise(n = n()) %>%
mutate(prop = n / sum(n),
estimate_irc = (-1 + prop))
} else {
distribution <- survey_data %>%
filter(issue == issue_slug) %>%
group_by(position) %>%
summarise(n = n()) %>%
mutate(prop = n / sum(n),
estimate_irc = (-1 + prop))
}
graph_data <- potgrowth::dynamic_potgrowth_data(
data = survey_data,
parties = potgrowth::qc_parties,
issues = issue_slug,
) %>%
mutate(
estimate_irc = ifelse(estimate_irc > 0, 0, estimate_irc),
estimate_irc = ifelse(estimate_irc < -1, -1, estimate_irc),
conf_low_irc = ifelse(conf_low_irc > 0, 0, conf_low_irc),
conf_low_irc = ifelse(conf_low_irc < -1, -1, conf_low_irc))
if (issue_slug == "iss_nationalisme_souv") {
graph_data <- graph_data %>%
mutate(
position = ifelse(position == 0.25, 0.33, position),
position = ifelse(position == 0.75, 0.67, position)
) %>%
filter(position != "0.5") %>%
left_join(party_positions, by = c("party", "issue")) %>%
mutate(is_party_position = ifelse(position == party_position, 1, 0))
} else {
graph_data <- graph_data %>%
left_join(party_positions, by = c("party", "issue")) %>%
mutate(is_party_position = ifelse(position == party_position, 1, 0))
}
graph_data2 <- as.data.frame(graph_data) %>%
mutate(sd = (conf_high_irc - conf_low_irc) / 2,
progress_bar = sapply(estimate_vote, potgrowth::generate_progress_bar),
line_opacity = ifelse(is_party_position == 1, 0.3, 0),
xticklabel = choices[position])
party_positions <- graph_data2 %>%
filter(is_party_position == 1)
# Créer le graphique Plotly avec des barres en arrière-plan et un axe y secondaire
print(nrow(party_positions))
print(nrow(graph_data2))
p <- plot_ly(
colors = potgrowth::qc_party_colors,
width = 850, height = 550) %>%
add_markers(data = party_positions,
text = ~paste0(party, "'s position:\n", xticklabel),
hoverinfo = "text",
x = ~position,
y = ~estimate_irc,
split = ~party,
color = ~party,
legendgroup = ~party,
colors = potgrowth::qc_party_colors,
marker = list(size = 40,
symbol = "diamond",
opacity = ~line_opacity),
showlegend = FALSE) %>%
add_lines(data = graph_data2,
line = list(width = 1),
showlegend = FALSE,
x = ~position,
y = ~estimate_irc,
split = ~party,
color = ~party,
legendgroup = ~party,
colors = potgrowth::qc_party_colors,
hoverinfo = "none") %>%
add_markers(x = ~position,
y = ~estimate_irc,
split = ~party,
color = ~party,
legendgroup = ~party,
marker = list(size = 11),
error_y = list(array = ~ sd),
text = ~paste0("Acquired votes in segment<br>", progress_bar),
hoverinfo = 'text') %>%
layout(
yaxis = list(range = c(-1, 0),
title = list(text = "Potential for Growth\n(predicted RCI of non-voters)",
standoff = 30),
tickvals = seq(from = -1, to = 0, by = 0.1),
ticktext = paste0(seq(from = -10, to = 0, by = 1), "   "),
zeroline = FALSE),
xaxis = list(title = paste0("\n", xlabel, "\n"),
tickvals = names(choices),
ticktext = choices,
tickfont = list(size = 9.5),
ticklabelposition = "outside",
zeroline = FALSE),
margin = list(l = 50, r = 50, t = 60, b = 130),
annotations = list(text = "Diamonds indicate the parties' positions on the issue.<br>Data from 2022.",
font = list(size = 12),
showarrow = FALSE,
xref = 'paper', x = 0,
yref = 'paper', y = 0)
)
return(p)
}
issue_slug <- "iss_nationalisme_souv"
choices <- c(
"0" = "Strongly in favor\nof Quebec remaining\nin Canada",
"0.33" = "Moderately in favor\nof Quebec remaining\nin Canada",
"0.67" = "Moderately in favor\nof Quebec becoming\na sovereign country",
"1" = "Strongly in favor\nof Quebec becoming\na sovereign country"
)
xlabel <- "Position on Quebec independence"
get_graph(issue_slug, choices, xlabel)
issue_slug <- "iss_laic_relSignsTeachersNo"
choices <- c(
"0" = "Strongly disagree",
"0.25" = "Somewhat disagree",
"0.5" = "Neutral",
"0.75" = "Somewhat agree",
"1" = "Strongly agree"
)
xlabel <- "Laicite"
get_graph(issue_slug, choices, xlabel)
issue_slug <- "iss_laic_relSignsTeachersNo"
choices <- c(
"0" = "Strongly disagree",
"0.25" = "Somewhat disagree",
"0.5" = "Neutral",
"0.75" = "Somewhat agree",
"1" = "Strongly agree"
)
xlabel <- "Laicite"
ssue_slug <- "iss_laic_relSignsTeachersNo"
issue_slug <- "iss_laic_relSignsTeachersNo"
choices <- c(
"0" = "Strongly disagree",
"0.25" = "Somewhat disagree",
"0.5" = "Neutral",
"0.75" = "Somewhat agree",
"1" = "Strongly agree"
)
xlabel <- "Laicite"
get_graph(issue_slug, choices, xlabel)
issue_slug
if (issue_slug == "iss_nationalisme_souv") {
distribution <- survey_data %>%
filter(issue == issue_slug) %>%
mutate(position = ifelse(position == 0.25, 0.33, position),
position = ifelse(position == 0.75, 0.67, position)) %>%
group_by(position) %>%
summarise(n = n()) %>%
mutate(prop = n / sum(n),
estimate_irc = (-1 + prop))
} else {
distribution <- survey_data %>%
filter(issue == issue_slug) %>%
group_by(position) %>%
summarise(n = n()) %>%
mutate(prop = n / sum(n),
estimate_irc = (-1 + prop))
}
View(distribution)
graph_data <- potgrowth::dynamic_potgrowth_data(
data = survey_data,
parties = potgrowth::qc_parties,
issues = issue_slug,
) %>%
mutate(
estimate_irc = ifelse(estimate_irc > 0, 0, estimate_irc),
estimate_irc = ifelse(estimate_irc < -1, -1, estimate_irc),
conf_low_irc = ifelse(conf_low_irc > 0, 0, conf_low_irc),
conf_low_irc = ifelse(conf_low_irc < -1, -1, conf_low_irc))
View(graph_data)
if (issue_slug == "iss_nationalisme_souv") {
graph_data <- graph_data %>%
mutate(
position = ifelse(position == 0.25, 0.33, position),
position = ifelse(position == 0.75, 0.67, position)
) %>%
filter(position != "0.5") %>%
left_join(party_positions, by = c("party", "issue")) %>%
mutate(is_party_position = ifelse(position == party_position, 1, 0))
} else {
graph_data <- graph_data %>%
left_join(party_positions, by = c("party", "issue")) %>%
mutate(is_party_position = ifelse(position == party_position, 1, 0))
}
graph_data2 <- as.data.frame(graph_data) %>%
mutate(sd = (conf_high_irc - conf_low_irc) / 2,
progress_bar = sapply(estimate_vote, potgrowth::generate_progress_bar),
line_opacity = ifelse(is_party_position == 1, 0.3, 0),
xticklabel = choices[position])
party_positions <- graph_data2 %>%
filter(is_party_position == 1)
# Créer le graphique Plotly avec des barres en arrière-plan et un axe y secondaire
print(nrow(party_positions))
print(nrow(graph_data2))
# Créer le graphique Plotly avec des barres en arrière-plan et un axe y secondaire
p <- plot_ly(
colors = potgrowth::qc_party_colors,
width = 850, height = 550) %>%
add_markers(data = party_positions,
text = ~paste0(party, "'s position:\n", xticklabel),
hoverinfo = "text",
x = ~position,
y = ~estimate_irc,
split = ~party,
color = ~party,
legendgroup = ~party,
colors = potgrowth::qc_party_colors,
marker = list(size = 40,
symbol = "diamond",
opacity = ~line_opacity),
showlegend = FALSE) %>%
add_lines(data = graph_data2,
line = list(width = 1),
showlegend = FALSE,
x = ~position,
y = ~estimate_irc,
split = ~party,
color = ~party,
legendgroup = ~party,
colors = potgrowth::qc_party_colors,
hoverinfo = "none") %>%
add_markers(x = ~position,
y = ~estimate_irc,
split = ~party,
color = ~party,
legendgroup = ~party,
marker = list(size = 11),
error_y = list(array = ~ sd),
text = ~paste0("Acquired votes in segment<br>", progress_bar),
hoverinfo = 'text') %>%
layout(
yaxis = list(range = c(-1, 0),
title = list(text = "Potential for Growth\n(predicted RCI of non-voters)",
standoff = 30),
tickvals = seq(from = -1, to = 0, by = 0.1),
ticktext = paste0(seq(from = -10, to = 0, by = 1), "   "),
zeroline = FALSE),
xaxis = list(title = paste0("\n", xlabel, "\n"),
tickvals = names(choices),
ticktext = choices,
tickfont = list(size = 9.5),
ticklabelposition = "outside",
zeroline = FALSE),
margin = list(l = 50, r = 50, t = 60, b = 130),
annotations = list(text = "Diamonds indicate the parties' positions on the issue.<br>Data from 2022.",
font = list(size = 12),
showarrow = FALSE,
xref = 'paper', x = 0,
yref = 'paper', y = 0)
)
p
