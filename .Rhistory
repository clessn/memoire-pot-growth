# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/withgaps.rds")
output <- potgrowth::compute_respondents_saliency(data = Data)
Final <- cbind(Data, output)
saveRDS(Final, "_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_adj_saliency.rds")
names(Final)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_adj_saliency.rds")
## to test function
party <- "CAQ"
rci_prefix <- "irc"
attitudegap_prefix <- "attitudegap"
saliency_prefix <- "adj_saliency"
ses_and_vis_to_include <- c(granular, age_cat, educ, income, male, lang, religion, religiosity,
starts_with("reception"))
party <- "CAQ"
model <- "vote_solidity"
data <- Data
rci_prefix <- "irc"
attitudegap_prefix <- "attitudegap"
saliency_prefix <- "adj_saliency"
ses_and_vis_to_include <- c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception"))
ses_and_vis_to_include <- rlang::enquos(c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
ses_and_vis_to_include <- rlang::enquos(c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
select <- function(vector){
vector <- rlang::enquos(vector)
return(vector)
}
ses_and_vis_to_include <- select(c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
View(ses_and_vis_to_include)
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci == max(rci) &
party == party)
View(newdata)
model <- "vote_solidity"
### stop if model not in vote sol etc. with clear message.
if (model %in% c("vote_solidity", "vote_intention")){
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci == max(rci))
} else if (model == "potential_for_growth") {
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci != max(rci) | rci == 0)
}
if (model == "vote_intention"){
newdata <- newdata %>%
# remove undecided voters
filter(rci != 0)
}
subset_data <- newdata %>%
## filter for party
filter(party == party) %>%
select(rci, starts_with(paste0(attitudegap_prefix, "_", party)),
starts_with(saliency_prefix))
paste0(attitudegap_prefix, "_", party)
subset_data <- newdata %>%
## filter for party
filter(party == party) %>%
dplyr::select(rci, starts_with(paste0(attitudegap_prefix, "_", party)),
starts_with(saliency_prefix))
subset_data <- newdata %>%
ungroup() %>%
## filter for party
filter(party == party) %>%
dplyr::select(rci, starts_with(paste0(attitudegap_prefix, "_", party)),
starts_with(saliency_prefix))
View(subset_data)
names(subset_data)
subset_data <- newdata %>%
ungroup() %>%
## filter for party
filter(party == party) %>%
dplyr::select(rci, starts_with(paste0(attitudegap_prefix, "_", party)),
starts_with(saliency_prefix), !!!ses_and_vis_to_include)
names(subset_data) <- gsub(paste0("_", party), "", names(subset_data))
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_adj_saliency.rds")
class(Data$granular)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/withgaps.rds")
class(Data$granular)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_scales.rds")
class(Data$granular)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/after_imputation1.rds")
class(Data$granular)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/after_imputation1.rds") %>%
## fix region variable as factor
mutate(granular = factor(granular))
FaData <- Data %>%
select(starts_with("iss"), -iss_enviro_envMeat, -iss_enviro_envTransp)
# Packages ----------------------------------------------------------------
library(dplyr)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/after_imputation1.rds") %>%
## fix region variable as factor
mutate(granular = factor(granular))
FaData <- Data %>%
select(starts_with("iss"), -iss_enviro_envMeat, -iss_enviro_envTransp)
fa <- factanal(FaData, 6, rotation = "promax")
fa$loadings
fa$loadings
Data$scale_souv_langfr <- potgrowth::compute_scale_scores(factanal_object = fa,
survey_data = Data,
scale_order = 1)
hist(Data$scale_souv_langfr)
Data$scale_souv_langfr <- potgrowth::compute_scale_scores(factanal_object = fa,
survey_data = Data,
scale_order = 1)
hist(Data$scale_souv_langfr)
Data$scale_libertarian <- potgrowth::compute_scale_scores(factanal_object = fa,
survey_data = Data,
scale_order = 2)
hist(Data$scale_libertarian)
Data$scale_woke <- potgrowth::compute_scale_scores(factanal_object = fa,
survey_data = Data,
scale_order = 3)
hist(Data$scale_woke)
Data$scale_laicite <- potgrowth::compute_scale_scores(factanal_object = fa,
survey_data = Data,
scale_order = 4)
hist(Data$scale_laicite)
Data$scale_immigration <- potgrowth::compute_scale_scores(factanal_object = fa,
survey_data = Data,
scale_order = 5)
hist(Data$scale_immigration)
Data$scale_lien3 <- potgrowth::compute_scale_scores(factanal_object = fa,
survey_data = Data,
scale_order = 6)
hist(Data$scale_lien3)
Data$political_trust <- (Data$poltrust_govDoJust + Data$poltrust_politicensPreocup +
Data$poltrust_politiciensBienveillants + Data$poltrust_trustPartisPol) / 4
hist(Data$political_trust)
saveRDS(Data, "_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_scales.rds")
# Packages ----------------------------------------------------------------
library(dplyr)
library(ggplot2)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_scales.rds")
aggregated_issue_positions <- potgrowth::aggregate_party_positions("_SharedFolder_memoire-pot-growth/data/warehouse/party_positions/expert_surveys/",
colnames = potgrowth::qc_parties)
factanal_object <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/scales/factanal.rds")
factanal_object$loadings
scale_names <- c("souv_langfr", "libertarian", "woke", "laicite", "immigration", "lien3")
# Compute party scales ----------------------------------------------------
party_scales <- potgrowth::compute_party_scales(aggregated_issue_positions = aggregated_issue_positions,
factanal_object = factanal_object,
scale_names = scale_names)
party_scales["CAQ", "scale_souv_langfr"]
party_scales["CAQ", "scale_libertarian"]
party_scales["PCQ", "scale_libertarian"]
party_scales["QS", "scale_libertarian"]
DataGaps <- potgrowth::compute_attitude_gaps(party_scales_matrix = party_scales,
survey_data = Data)
saveRDS(DataGaps, "_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/withgaps.rds")
# Packages ----------------------------------------------------------------
library(dplyr)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/withgaps.rds")
output <- potgrowth::compute_respondents_saliency(data = Data)
Final <- cbind(Data, output)
saveRDS(Final, "_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_adj_saliency.rds")
# Packages ----------------------------------------------------------------
library(dplyr)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_adj_saliency.rds")
party <- "CAQ"
model <- "vote_solidity"
data <- Data
rci_prefix <- "irc"
attitudegap_prefix <- "attitudegap"
saliency_prefix <- "adj_saliency"
select <- function(vector){
vector <- rlang::enquos(vector)
return(vector)
}
ses_and_vis_to_include <- select(c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
get_model_data <- function(
party,
model = c("vote_solidity", "potential_for_growth", "vote_intention"),
data,
rci_prefix = "irc_",
attitudegap_prefix = "attitudegap",
saliency_prefix = "adj_saliency",
ses_and_vis_to_include){
ses_and_vis_to_include <- rlang::enquos(ses_and_vis_to_include)
### stop if model not in vote sol etc. with clear message.
if (model %in% c("vote_solidity", "vote_intention")){
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci == max(rci))
} else if (model == "potential_for_growth") {
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci != max(rci) | rci == 0)
}
if (model == "vote_intention"){
newdata <- newdata %>%
# remove undecided voters
filter(rci != 0)
}
subset_data <- newdata %>%
ungroup() %>%
## filter for party
filter(party == party) %>%
dplyr::select(rci, starts_with(paste0(attitudegap_prefix, "_", party)),
starts_with(saliency_prefix), !!!ses_and_vis_to_include)
names(subset_data) <- gsub(paste0("_", party), "", names(subset_data))
return(subset_data)
}
# Packages ----------------------------------------------------------------
library(dplyr)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_adj_saliency.rds")
get_model_data <- function(
party,
model = c("vote_solidity", "potential_for_growth", "vote_intention"),
data,
rci_prefix = "irc_",
attitudegap_prefix = "attitudegap",
saliency_prefix = "adj_saliency",
ses_and_vis_to_include){
ses_and_vis_to_include <- rlang::enquos(ses_and_vis_to_include)
### stop if model not in vote sol etc. with clear message.
if (model %in% c("vote_solidity", "vote_intention")){
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci == max(rci))
} else if (model == "potential_for_growth") {
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci != max(rci) | rci == 0)
}
if (model == "vote_intention"){
newdata <- newdata %>%
# remove undecided voters
filter(rci != 0)
}
subset_data <- newdata %>%
ungroup() %>%
## filter for party
filter(party == party) %>%
dplyr::select(rci, starts_with(paste0(attitudegap_prefix, "_", party)),
starts_with(saliency_prefix), !!!ses_and_vis_to_include)
names(subset_data) <- gsub(paste0("_", party), "", names(subset_data))
return(subset_data)
}
caq_solid <- get_model_data(party = "CAQ", model = "vote_solidity",
data = Data,
ses_and_vis_to_include = c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
View(caq_solid)
table(Data$voteInt)
caq_potgrowth <- get_model_data(party = "CAQ", model = "potential_for_growth",
data = Data,
ses_and_vis_to_include = c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
View(caq_potgrowth)
View(Data)
model <- "potential_for_growth"
party <- "CAQ"
data = Data
data <- Data
rci_prefix = "irc_"
attitudegap_prefix = "attitudegap"
saliency_prefix = "adj_saliency"
### stop if model not in vote sol etc. with clear message.
if (model %in% c("vote_solidity", "vote_intention")){
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci == max(rci))
} else if (model == "potential_for_growth") {
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci != max(rci) | rci == 0)
}
View(newdata)
subset_data <- newdata %>%
ungroup() %>%
## filter for party
filter(party == party)
View(subset_data)
subset_data <- newdata %>%
ungroup() %>%
## filter for party
filter(party == !!!party)
subset_data <- newdata %>%
ungroup() %>%
## filter for party
filter(party == !!party)
get_model_data <- function(
party,
model = c("vote_solidity", "potential_for_growth", "vote_intention"),
data,
rci_prefix = "irc_",
attitudegap_prefix = "attitudegap",
saliency_prefix = "adj_saliency",
ses_and_vis_to_include){
ses_and_vis_to_include <- rlang::enquos(ses_and_vis_to_include)
### stop if model not in vote sol etc. with clear message.
if (model %in% c("vote_solidity", "vote_intention")){
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci == max(rci))
} else if (model == "potential_for_growth") {
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci != max(rci) | rci == 0)
}
if (model == "vote_intention"){
newdata <- newdata %>%
# remove undecided voters
filter(rci != 0) %>%
}
get_model_data <- function(
party,
model = c("vote_solidity", "potential_for_growth", "vote_intention"),
data,
rci_prefix = "irc_",
attitudegap_prefix = "attitudegap",
saliency_prefix = "adj_saliency",
ses_and_vis_to_include){
ses_and_vis_to_include <- rlang::enquos(ses_and_vis_to_include)
### stop if model not in vote sol etc. with clear message.
if (model %in% c("vote_solidity", "vote_intention")){
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci == max(rci))
} else if (model == "potential_for_growth") {
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci != max(rci) | rci == 0)
}
if (model == "vote_intention"){
newdata <- newdata %>%
# remove undecided voters
filter(rci != 0) %>%
}
get_model_data <- function(
party,
model = c("vote_solidity", "potential_for_growth", "vote_intention"),
data,
rci_prefix = "irc_",
attitudegap_prefix = "attitudegap",
saliency_prefix = "adj_saliency",
ses_and_vis_to_include){
ses_and_vis_to_include <- rlang::enquos(ses_and_vis_to_include)
### stop if model not in vote sol etc. with clear message.
if (model %in% c("vote_solidity", "vote_intention")){
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci == max(rci))
} else if (model == "potential_for_growth") {
newdata <- data %>%
tidyr::pivot_longer(., cols = starts_with(rci_prefix),
names_to = "party",
names_prefix = rci_prefix,
values_to = "rci") %>%
group_by(id, source_id) %>%
filter(rci != max(rci) | rci == 0)
}
if (model == "vote_intention"){
newdata <- newdata %>%
# remove undecided voters
filter(rci != 0)
}
subset_data <- newdata %>%
ungroup() %>%
## filter for party
filter(party == !!party) %>%
dplyr::select(rci, starts_with(paste0(attitudegap_prefix, "_", party)),
starts_with(saliency_prefix), !!!ses_and_vis_to_include)
names(subset_data) <- gsub(paste0("_", party), "", names(subset_data))
return(subset_data)
}
caq_solid <- get_model_data(party = "CAQ", model = "vote_solidity",
data = Data,
ses_and_vis_to_include = c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
View(caq_solid)
caq_potgrowth <- get_model_data(party = "CAQ", model = "potential_for_growth",
data = Data,
ses_and_vis_to_include = c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
View(caq_potgrowth)
voteint_variable = "voteInt"
subset_data <- data %>%
dplyr::select(voteint_variable, starts_with(attitudegap_prefix),
starts_with(saliency_prefix),
!!!ses_and_vis_to_include)
get_voteint_model_data <- function(
data,
voteint_variable = "voteInt",
attitudegap_prefix = "attitudegap",
saliency_prefix = "adj_saliency",
ses_and_vis_to_include
){
ses_and_vis_to_include <- rlang::enquos(ses_and_vis_to_include)
subset_data <- data %>%
dplyr::select(voteint_variable, starts_with(attitudegap_prefix),
starts_with(saliency_prefix),
!!!ses_and_vis_to_include)
return(subset_data)
}
voteint <- get_voteint_model_data(data = Data)
get_voteint_model_data <- function(
data,
voteint_variable = "voteInt",
attitudegap_prefix = "attitudegap",
saliency_prefix = "adj_saliency",
ses_and_vis_to_include
){
ses_and_vis_to_include <- rlang::enquos(ses_and_vis_to_include)
subset_data <- data %>%
dplyr::select(all_of(voteint_variable), starts_with(attitudegap_prefix),
starts_with(saliency_prefix),
!!!ses_and_vis_to_include)
return(subset_data)
}
voteint <- get_voteint_model_data(data = Data)
View(voteint)
voteint <- get_voteint_model_data(data = Data,
ses_and_vis_to_include = c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
View(voteint)
devtools::install_github("hubcad25/potgrowth")
# Packages ----------------------------------------------------------------
library(dplyr)
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_adj_saliency.rds")
caq_solid <- potgrowth::get_model_data(party = "CAQ", model = "vote_solidity",
data = Data,
ses_and_vis_to_include = c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
# Data --------------------------------------------------------------------
Data <- readRDS("_SharedFolder_memoire-pot-growth/data/warehouse/survey_data/with_adj_saliency.rds")
caq_solid <- potgrowth::get_model_data(party = "CAQ", model = "vote_solidity",
data = Data,
ses_and_vis_to_include = c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
caq_potgrowth <- potgrowth::get_model_data(party = "CAQ", model = "potential_for_growth",
data = Data,
ses_and_vis_to_include = c("granular", "age_cat", "educ", "income", "male", "lang",
"religion", "religiosity", starts_with("reception")))
View(caq_solid)
View(caq_solid)
View(caq_potgrowth)
